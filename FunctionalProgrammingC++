/* 1) Passing functions as arguments */

#include <iostream>
#include <functional>
#include <cstdint>

using namespace std;

typedef function<int(int,int)> FuncType;

int addition(int x, int y)
{
    return x+y; 
}

int subtraction(int x, int y)
{
    return x-y;
}

int multiplication(int x, int y)
{
    return x*y;
}

int division(int x, int y)
{
    return x/y;
}

void PassingFunc(FuncType fn, int x, int y)
{
    cout <<  "Result =" << fn(x, y) << endl; 
}


int main() {
    
    cout << "FuncType : passing function as an argument " << endl;
    int a, b, c; 
    int mode;
    FuncType func;
    
    cout << "Select mode:" << endl;
    cout << "1.Addition" << endl;
    cout << "2.Subtraction" << endl;
    cout << "3.Multiplication" << endl;
    cout << "4.Division" << endl;
    cout << "Choice: " ;
    cin >> mode; 
    
    if (mode <1 || mode >4) 
    {
        cout << "Invalid choice" << endl;
        return 1;
    }
    
    cout << "a-> "; 
    cin >> a; 
    
    while (cin.fail())
    {
        cin.clear();
        cin.ignore(INT8_MAX, '\n'); 
        
        cout << "Enter only numbers :\n";
        cout << "Enter a number for a : "; 
        cin >> a; 
    }
    
    
    cout << "b-> "; 
    cin >> b; 
    
    while (cin.fail())
    {
        cin.clear();
        cin.ignore(INT8_MAX, '\n'); 
        
        cout << "Enter only numbers :\n";
        cout << "Enter a number for b : "; 
        cin >> b; 
    }
    
    switch(mode) 
    {
        case 1: PassingFunc(addition, a, b);
        case 2: PassingFunc(subtraction, a, b);
        case 3: PassingFunc(multiplication, a, b);
        case 4: PassingFunc(division, a, b);
    }
    
    return 0;
}
